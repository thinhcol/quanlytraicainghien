/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DuAnDAO.*;
import Entity.*;
import Helper.*;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class DichVuJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DichVuJPanel
     */
    public DichVuJPanel() {
        initComponents();
        this.init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel65 = new javax.swing.JLabel();
        pnlDichVu = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        txtTenDichVu = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel68 = new javax.swing.JLabel();
        txtTimKiemDV = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        btnNewDV = new javax.swing.JButton();
        btnThemDV = new javax.swing.JButton();
        btnCapNhatDV = new javax.swing.JButton();
        jLabel70 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        jScrollPane15 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        btnXoaDV = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDichVu = new rojeru_san.complementos.RSTableMetro();
        pnlDichVu1 = new javax.swing.JPanel();
        jSeparator10 = new javax.swing.JSeparator();
        jLabel73 = new javax.swing.JLabel();
        btnNewVDCT = new javax.swing.JButton();
        btnThemDVCT = new javax.swing.JButton();
        btnXoaDVCT = new javax.swing.JButton();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        txtNgayDangKi = new com.toedter.calendar.JDateChooser();
        cboTenDichVu = new javax.swing.JComboBox<String>();
        cboTenBN = new javax.swing.JComboBox<String>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDichVuCT = new rojeru_san.complementos.RSTableMetro();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1400, 875));

        jLabel65.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(50, 133, 253));
        jLabel65.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel65.setText("QUẢN LÝ DỊCH VỤ");

        pnlDichVu.setBackground(new java.awt.Color(255, 255, 255));
        pnlDichVu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));

        jLabel67.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(102, 102, 102));
        jLabel67.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/New Icon/tenDV.png"))); // NOI18N
        jLabel67.setText("Tên dịch vụ");

        txtTenDichVu.setBackground(new java.awt.Color(240, 240, 240));
        txtTenDichVu.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txtTenDichVu.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 133, 253)));

        jLabel68.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/New Icon/timKiem.png"))); // NOI18N

        txtTimKiemDV.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        txtTimKiemDV.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(50, 133, 253)));
        txtTimKiemDV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemDVKeyReleased(evt);
            }
        });

        jLabel69.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(102, 102, 102));
        jLabel69.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/New Icon/gia.png"))); // NOI18N
        jLabel69.setText("Giá dịch vụ");

        btnNewDV.setBackground(new java.awt.Color(50, 133, 253));
        btnNewDV.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnNewDV.setForeground(new java.awt.Color(255, 255, 255));
        btnNewDV.setText("MỚI");
        btnNewDV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnNewDV.setContentAreaFilled(false);
        btnNewDV.setOpaque(true);
        btnNewDV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNewDVMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNewDVMouseExited(evt);
            }
        });
        btnNewDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewDVActionPerformed(evt);
            }
        });

        btnThemDV.setBackground(new java.awt.Color(50, 133, 253));
        btnThemDV.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnThemDV.setForeground(new java.awt.Color(255, 255, 255));
        btnThemDV.setText("THÊM");
        btnThemDV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnThemDV.setContentAreaFilled(false);
        btnThemDV.setOpaque(true);
        btnThemDV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnThemDVMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnThemDVMouseExited(evt);
            }
        });
        btnThemDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemDVActionPerformed(evt);
            }
        });

        btnCapNhatDV.setBackground(new java.awt.Color(50, 133, 253));
        btnCapNhatDV.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnCapNhatDV.setForeground(new java.awt.Color(255, 255, 255));
        btnCapNhatDV.setText("CẬP NHẬT");
        btnCapNhatDV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnCapNhatDV.setContentAreaFilled(false);
        btnCapNhatDV.setOpaque(true);
        btnCapNhatDV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCapNhatDVMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCapNhatDVMouseExited(evt);
            }
        });
        btnCapNhatDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatDVActionPerformed(evt);
            }
        });

        jLabel70.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(102, 102, 102));
        jLabel70.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/New Icon/moTa.png"))); // NOI18N
        jLabel70.setText("Mô tả");

        txtGia.setBackground(new java.awt.Color(240, 240, 240));
        txtGia.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txtGia.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 133, 253)));

        txtMoTa.setBackground(new java.awt.Color(240, 240, 240));
        txtMoTa.setColumns(20);
        txtMoTa.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txtMoTa.setRows(5);
        txtMoTa.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 133, 253)));
        jScrollPane15.setViewportView(txtMoTa);

        btnXoaDV.setBackground(new java.awt.Color(50, 133, 253));
        btnXoaDV.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnXoaDV.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaDV.setText("XÓA");
        btnXoaDV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnXoaDV.setContentAreaFilled(false);
        btnXoaDV.setOpaque(true);
        btnXoaDV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnXoaDVMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnXoaDVMouseExited(evt);
            }
        });
        btnXoaDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaDVActionPerformed(evt);
            }
        });

        tblDichVu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã dịch vụ", "Tên dịch vụ", "Giá dịch vụ", "Mô tả"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDichVu.setColorBackgoundHead(new java.awt.Color(51, 133, 253));
        tblDichVu.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        tblDichVu.setColorBordeHead(new java.awt.Color(51, 133, 253));
        tblDichVu.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tblDichVu.setColorFilasForeground1(new java.awt.Color(51, 133, 253));
        tblDichVu.setColorFilasForeground2(new java.awt.Color(51, 133, 253));
        tblDichVu.setColorSelBackgound(new java.awt.Color(51, 133, 253));
        tblDichVu.setFuenteFilas(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tblDichVu.setFuenteFilasSelect(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tblDichVu.setFuenteHead(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        tblDichVu.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblDichVu.setRowHeight(25);
        tblDichVu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDichVuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDichVu);

        javax.swing.GroupLayout pnlDichVuLayout = new javax.swing.GroupLayout(pnlDichVu);
        pnlDichVu.setLayout(pnlDichVuLayout);
        pnlDichVuLayout.setHorizontalGroup(
            pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDichVuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDichVuLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDichVuLayout.createSequentialGroup()
                                .addComponent(jLabel68)
                                .addGap(0, 0, 0)
                                .addComponent(txtTimKiemDV, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDichVuLayout.createSequentialGroup()
                                .addComponent(btnThemDV, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCapNhatDV, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnXoaDV, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlDichVuLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDichVuLayout.createSequentialGroup()
                            .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel67)
                                .addComponent(jLabel69)
                                .addComponent(jLabel70))
                            .addGap(55, 55, 55)
                            .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtTenDichVu)
                                .addComponent(txtGia)
                                .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)))
                        .addComponent(jSeparator9)
                        .addGroup(pnlDichVuLayout.createSequentialGroup()
                            .addComponent(btnNewDV, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 616, Short.MAX_VALUE)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlDichVuLayout.setVerticalGroup(
            pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDichVuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiemDV, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemDV, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaDV, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCapNhatDV, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97))
            .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlDichVuLayout.createSequentialGroup()
                    .addGap(72, 72, 72)
                    .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel67)
                        .addComponent(txtTenDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(25, 25, 25)
                    .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel69)
                        .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(25, 25, 25)
                    .addGroup(pnlDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel70)
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(258, 258, 258)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(25, 25, 25)
                    .addComponent(btnNewDV, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(95, Short.MAX_VALUE)))
        );

        pnlDichVu1.setBackground(new java.awt.Color(255, 255, 255));
        pnlDichVu1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));

        jLabel73.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel73.setForeground(new java.awt.Color(102, 102, 102));
        jLabel73.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/New Icon/tenBN.png"))); // NOI18N
        jLabel73.setText("Tên bệnh nhân");

        btnNewVDCT.setBackground(new java.awt.Color(50, 133, 253));
        btnNewVDCT.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnNewVDCT.setForeground(new java.awt.Color(255, 255, 255));
        btnNewVDCT.setText("MỚI");
        btnNewVDCT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnNewVDCT.setContentAreaFilled(false);
        btnNewVDCT.setOpaque(true);
        btnNewVDCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNewVDCTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNewVDCTMouseExited(evt);
            }
        });
        btnNewVDCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewVDCTActionPerformed(evt);
            }
        });

        btnThemDVCT.setBackground(new java.awt.Color(50, 133, 253));
        btnThemDVCT.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnThemDVCT.setForeground(new java.awt.Color(255, 255, 255));
        btnThemDVCT.setText("THÊM");
        btnThemDVCT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnThemDVCT.setContentAreaFilled(false);
        btnThemDVCT.setOpaque(true);
        btnThemDVCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnThemDVCTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnThemDVCTMouseExited(evt);
            }
        });
        btnThemDVCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemDVCTActionPerformed(evt);
            }
        });

        btnXoaDVCT.setBackground(new java.awt.Color(50, 133, 253));
        btnXoaDVCT.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnXoaDVCT.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaDVCT.setText("XÓA");
        btnXoaDVCT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnXoaDVCT.setContentAreaFilled(false);
        btnXoaDVCT.setOpaque(true);
        btnXoaDVCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnXoaDVCTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnXoaDVCTMouseExited(evt);
            }
        });
        btnXoaDVCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaDVCTActionPerformed(evt);
            }
        });

        jLabel75.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel75.setForeground(new java.awt.Color(102, 102, 102));
        jLabel75.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/New Icon/tenDV.png"))); // NOI18N
        jLabel75.setText("Tên dịch vụ");

        jLabel76.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel76.setForeground(new java.awt.Color(102, 102, 102));
        jLabel76.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/New Icon/ngayDangKy.png"))); // NOI18N
        jLabel76.setText("Ngày đăng ký");

        jLabel74.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(102, 102, 102));
        jLabel74.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/New Icon/ghiChu.png"))); // NOI18N
        jLabel74.setText("Ghi chú");

        txtGhiChu.setBackground(new java.awt.Color(240, 240, 240));
        txtGhiChu.setColumns(20);
        txtGhiChu.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txtGhiChu.setRows(5);
        jScrollPane16.setViewportView(txtGhiChu);

        txtNgayDangKi.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 133, 253)));
        txtNgayDangKi.setDateFormatString("dd/MM/yyyy");
        txtNgayDangKi.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N

        cboTenDichVu.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        cboTenDichVu.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 133, 253)));
        cboTenDichVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTenDichVuActionPerformed(evt);
            }
        });

        cboTenBN.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        cboTenBN.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 133, 253)));
        cboTenBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTenBNActionPerformed(evt);
            }
        });

        tblDichVuCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã dịch vụ chi tiết", "Tên dịch vụ", "Tên bệnh nhân", "Ngày đăng ký", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDichVuCT.setColorBackgoundHead(new java.awt.Color(51, 133, 253));
        tblDichVuCT.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        tblDichVuCT.setColorBordeHead(new java.awt.Color(51, 133, 253));
        tblDichVuCT.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tblDichVuCT.setColorFilasForeground1(new java.awt.Color(51, 133, 253));
        tblDichVuCT.setColorFilasForeground2(new java.awt.Color(51, 133, 253));
        tblDichVuCT.setColorSelBackgound(new java.awt.Color(51, 133, 253));
        tblDichVuCT.setFuenteFilas(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tblDichVuCT.setFuenteFilasSelect(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tblDichVuCT.setFuenteHead(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        tblDichVuCT.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblDichVuCT.setRowHeight(25);
        tblDichVuCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDichVuCTMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDichVuCT);

        javax.swing.GroupLayout pnlDichVu1Layout = new javax.swing.GroupLayout(pnlDichVu1);
        pnlDichVu1.setLayout(pnlDichVu1Layout);
        pnlDichVu1Layout.setHorizontalGroup(
            pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDichVu1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDichVu1Layout.createSequentialGroup()
                        .addGroup(pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel76)
                            .addComponent(jLabel74))
                        .addGroup(pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDichVu1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDichVu1Layout.createSequentialGroup()
                                .addGap(153, 153, 153)
                                .addGroup(pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboTenBN, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtNgayDangKi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDichVu1Layout.createSequentialGroup()
                        .addGroup(pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel73)
                            .addComponent(jLabel75))
                        .addGap(140, 140, 140)
                        .addComponent(cboTenDichVu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDichVu1Layout.createSequentialGroup()
                        .addComponent(btnNewVDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThemDVCT, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoaDVCT, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlDichVu1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        pnlDichVu1Layout.setVerticalGroup(
            pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDichVu1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel75)
                    .addComponent(cboTenDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel73)
                    .addComponent(cboTenBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel76)
                    .addComponent(txtNgayDangKi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDichVu1Layout.createSequentialGroup()
                        .addComponent(jLabel74)
                        .addGap(70, 70, 70))
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(302, 302, 302)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewVDCT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThemDVCT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaDVCT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(pnlDichVu1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlDichVu1Layout.createSequentialGroup()
                    .addGap(320, 320, 320)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(137, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel65, javax.swing.GroupLayout.DEFAULT_SIZE, 1900, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlDichVu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel65)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlDichVu1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDichVu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(72, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewDVActionPerformed
        this.clearForm();
    }//GEN-LAST:event_btnNewDVActionPerformed

    private void btnThemDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemDVActionPerformed
        this.insert();
        this.isLoad = false;
        fillComboxDichVu();
        this.isLoad = true;
        this.fillTableDVCT();
    }//GEN-LAST:event_btnThemDVActionPerformed

    private void btnCapNhatDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatDVActionPerformed
        this.update();
        this.isLoad = false;
        fillComboxDichVu();
        this.isLoad = true;
        this.fillTableDVCT();
    }//GEN-LAST:event_btnCapNhatDVActionPerformed

    private void btnXoaDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDVActionPerformed
        this.delete();
        this.isLoad = false;
        fillComboxDichVu();
        this.isLoad = true;
        this.fillTableDVCT();
    }//GEN-LAST:event_btnXoaDVActionPerformed

    private void txtTimKiemDVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemDVKeyReleased
        this.timKiem();
    }//GEN-LAST:event_txtTimKiemDVKeyReleased

    private void btnNewVDCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewVDCTActionPerformed
        this.clearFormDVCT();
    }//GEN-LAST:event_btnNewVDCTActionPerformed

    private void btnThemDVCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemDVCTActionPerformed
        this.insertDVCT();
    }//GEN-LAST:event_btnThemDVCTActionPerformed

    private void btnXoaDVCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDVCTActionPerformed
        this.deleteDVCT();
    }//GEN-LAST:event_btnXoaDVCTActionPerformed

    private void cboTenDichVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTenDichVuActionPerformed
        this.selectCbo();
    }//GEN-LAST:event_cboTenDichVuActionPerformed

    private void cboTenBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTenBNActionPerformed
        this.selectCbo();
    }//GEN-LAST:event_cboTenBNActionPerformed

    private void tblDichVuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDichVuMouseClicked
        if (evt.getClickCount() == 2) {
            this.rowdv = tblDichVu.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblDichVuMouseClicked

    private void btnNewDVMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewDVMouseEntered
        btnNewDV.setBackground(new Color(0, 0, 153));
    }//GEN-LAST:event_btnNewDVMouseEntered

    private void btnThemDVMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemDVMouseEntered
        btnThemDV.setBackground(new Color(0, 0, 153));
    }//GEN-LAST:event_btnThemDVMouseEntered

    private void btnCapNhatDVMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapNhatDVMouseEntered
        btnCapNhatDV.setBackground(new Color(0, 0, 153));
    }//GEN-LAST:event_btnCapNhatDVMouseEntered

    private void btnXoaDVMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaDVMouseEntered
        btnXoaDV.setBackground(new Color(0, 0, 153));
    }//GEN-LAST:event_btnXoaDVMouseEntered

    private void btnNewDVMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewDVMouseExited
        btnNewDV.setBackground(new Color(51, 133, 253));
    }//GEN-LAST:event_btnNewDVMouseExited

    private void btnThemDVMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemDVMouseExited
        btnThemDV.setBackground(new Color(51, 133, 253));
    }//GEN-LAST:event_btnThemDVMouseExited

    private void btnCapNhatDVMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapNhatDVMouseExited
        btnCapNhatDV.setBackground(new Color(51, 133, 253));
    }//GEN-LAST:event_btnCapNhatDVMouseExited

    private void btnXoaDVMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaDVMouseExited
        btnXoaDV.setBackground(new Color(51, 133, 253));
    }//GEN-LAST:event_btnXoaDVMouseExited

    private void tblDichVuCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDichVuCTMouseClicked
        if (evt.getClickCount() == 2) {
            isLoad = false;
            this.rowdvct = tblDichVuCT.getSelectedRow();
            this.editDVCT();
        }
    }//GEN-LAST:event_tblDichVuCTMouseClicked

    private void btnNewVDCTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewVDCTMouseEntered
        btnNewVDCT.setBackground(new Color(0, 0, 153));
    }//GEN-LAST:event_btnNewVDCTMouseEntered

    private void btnThemDVCTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemDVCTMouseEntered
        btnThemDVCT.setBackground(new Color(0, 0, 153));
    }//GEN-LAST:event_btnThemDVCTMouseEntered

    private void btnXoaDVCTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaDVCTMouseEntered
        btnXoaDVCT.setBackground(new Color(0, 0, 153));
    }//GEN-LAST:event_btnXoaDVCTMouseEntered

    private void btnNewVDCTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewVDCTMouseExited
        btnNewVDCT.setBackground(new Color(51, 133, 253));
    }//GEN-LAST:event_btnNewVDCTMouseExited

    private void btnThemDVCTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemDVCTMouseExited
        btnThemDVCT.setBackground(new Color(51, 133, 253));
    }//GEN-LAST:event_btnThemDVCTMouseExited

    private void btnXoaDVCTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaDVCTMouseExited
        btnXoaDVCT.setBackground(new Color(51, 133, 253));
    }//GEN-LAST:event_btnXoaDVCTMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhatDV;
    private javax.swing.JButton btnNewDV;
    private javax.swing.JButton btnNewVDCT;
    private javax.swing.JButton btnThemDV;
    private javax.swing.JButton btnThemDVCT;
    private javax.swing.JButton btnXoaDV;
    private javax.swing.JButton btnXoaDVCT;
    private javax.swing.JComboBox<String> cboTenBN;
    private javax.swing.JComboBox<String> cboTenDichVu;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JPanel pnlDichVu;
    private javax.swing.JPanel pnlDichVu1;
    private rojeru_san.complementos.RSTableMetro tblDichVu;
    private rojeru_san.complementos.RSTableMetro tblDichVuCT;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextArea txtMoTa;
    private com.toedter.calendar.JDateChooser txtNgayDangKi;
    private javax.swing.JTextField txtTenDichVu;
    private javax.swing.JTextField txtTimKiemDV;
    // End of variables declaration//GEN-END:variables

    DichVuDAO dvdao = new DichVuDAO();
    DichVuCTDAO dvctdao = new DichVuCTDAO();
    BenhNhanDAO bndao = new BenhNhanDAO();

    int rowdv = -1;
    int rowdvct = -1;

    boolean isLoad = false;

    void init() {
        this.fillTable();
        this.rowdv = -1;
        this.updateStatus();

        this.fillComboxBenhNhan();
        this.fillComboxDichVu();
        this.fillTableDVCT();
        this.rowdvct = -1;
        this.updateStatusDVCT();
        txtNgayDangKi.setDate(new Date());
    }

    void clearForm() {
        DichVu dv = new DichVu();
        this.setForm(dv);
        this.rowdv = -1;
        this.updateStatus();
    }

    void insert() {
        if (validateData()) {
            DichVu dv = getForm();
            try {
                dvdao.insert(dv);
                this.fillTable();
                this.clearForm();
                DialogHelper.alert(this, "Thêm mới thành công");
            } catch (Exception e) {
                DialogHelper.alert(this, "Thêm mới thất bại");
            }
        }
    }

    void delete() {
        if (ShareHelper.isManager()) {
            DialogHelper.alert(this, "Bạn không có quyền xóa");
        } else {
             int maDV = (Integer) tblDichVu.getValueAt(rowdv, 0);
            if (DialogHelper.confirm(this, "Bạn có muốn xóa không")) {
                try {
                    dvdao.delete(maDV);
                    this.fillTable();
                    this.clearForm();
                    DialogHelper.alert(this, "Đã xóa thành công");
                } catch (Exception e) {
                    DialogHelper.alert(this, "Xóa thất bại");
                    System.out.println(e);
                }
            }
           
        }
    }

    void update() {
        if (validateData()) {
            DichVu dv = getForm();
            dv.setMaDV((int) tblDichVu.getValueAt(rowdv, 0));
            try {
                dvdao.update(dv);
                this.fillTable();
                DialogHelper.alert(this, "Đã cập nhật thành công");
            } catch (Exception e) {
                DialogHelper.alert(this, "Cập nhật thất bại");
                System.out.println(e);
            }
        }
    }

    void frist() {
        this.rowdv = 0;
        this.edit();
    }

    void prev() {
        if (this.rowdv > 0) {
            this.rowdv--;
            this.edit();
        }
    }

    void next() {
        if (this.rowdv < tblDichVu.getRowCount() - 1) {
            this.rowdv++;
            this.edit();
        }
    }

    void last() {
        this.rowdv = tblDichVu.getRowCount() - 1;
        this.edit();
    }

    void setForm(DichVu dv) {
        txtTenDichVu.setText(dv.getTenDV());
        txtGia.setText(FormatHepler.formatMoney(dv.getGia()));
        txtMoTa.setText(dv.getMoTa());
    }

    DichVu getForm() {
        DichVu dv = new DichVu();
        dv.setTenDV(txtTenDichVu.getText());
        dv.setGia(FormatHepler.formatMoneyToDouble(txtGia.getText()));
        dv.setMoTa(txtMoTa.getText());
        return dv;
    }

    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblDichVu.getModel();
        model.setRowCount(0);

        try {
            String timKiem = txtTimKiemDV.getText();
            List<DichVu> list = dvdao.selectByKeyword(timKiem);
            for (DichVu dv : list) {
                Object[] rowdv = {
                    dv.getMaDV(),
                    dv.getTenDV(),
                    FormatHepler.formatMoney(dv.getGia()),
                    dv.getMoTa()
                };
                model.addRow(rowdv);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu");
            System.out.println(e);
        }

    }

    void edit() {
        int maDV = (Integer) tblDichVu.getValueAt(this.rowdv, 0);
        DichVu dv = dvdao.selectByID(maDV);
        this.setForm(dv);
        this.clearFormDVCT();
        cboTenDichVu.getModel().setSelectedItem(dv);
        this.fillTableDVCT();
        this.updateStatus();
    }

    void updateStatus() {
        boolean edit = (this.rowdv >= 0);
        boolean frist = (this.rowdv == 0);
        boolean last = (this.rowdv == tblDichVu.getRowCount() - 1);
        btnThemDV.setEnabled(!edit);
        btnCapNhatDV.setEnabled(edit);
        btnXoaDV.setEnabled(edit);
    }

    boolean validateData() {
        if (txtTenDichVu.getText().isEmpty()) {
            DialogHelper.alert(this, "Tên dịch vụ không được để trống");
            txtTenDichVu.requestFocus();
            return false;
        } else if (txtGia.getText().isEmpty()) {
            DialogHelper.alert(this, "Giá không được để trống");
            txtGia.requestFocus();
            return false;
        } else if (!CheckHelper.checkGia(txtGia)) {
            txtGia.requestFocus();
            return false;
        } else if (txtMoTa.getText().isEmpty()) {
            DialogHelper.alert(this, "Mô tả không được để trống");
            txtMoTa.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    void timKiem() {
        this.fillTable();
        this.clearForm();
        this.rowdv = -1;
        updateStatus();
    }

    void clearFormDVCT() {
        cboTenBN.setSelectedIndex(0);
        cboTenDichVu.setSelectedIndex(0);
        txtNgayDangKi.setDate(new Date());
        fillTable();
        this.rowdvct = -1;
        this.updateStatusDVCT();
    }

    void insertDVCT() {
        if (validateDataDVCT()) {
            DichVuCT dvct = getFormDVCT();
            try {
                dvctdao.insert(dvct);
                this.fillTableDVCT();
                this.clearFormDVCT();
                DialogHelper.alert(this, "Thêm mới thành công");
            } catch (Exception e) {
                DialogHelper.alert(this, "Thêm mới thất bại");
            }
        }
    }

    void deleteDVCT() {
        if (ShareHelper.isManager()) {
            DialogHelper.alert(this, "Bạn không có quyền xóa");
        } else {  int maDVCT = (Integer) tblDichVuCT.getValueAt(rowdvct, 0);
            if (DialogHelper.confirm(this, "Bạn có muốn xóa không")) {
                try {
                    dvctdao.delete(maDVCT);
                    this.fillTableDVCT();
                    this.clearFormDVCT();
                    DialogHelper.alert(this, "Đã xóa thành công");
                } catch (Exception e) {
                    DialogHelper.alert(this, "Xóa thất bại");
                    System.out.println(e);
                }
            }
          
        }
    }

    void updateDVCT() {
        int maDVCT = (Integer) tblDichVuCT.getValueAt(rowdvct, 0);
        if (validateDataDVCT()) {
            DichVuCT dvct = getFormDVCT();
            dvct.setMaDVCT(maDVCT);
            try {
                dvctdao.update(dvct);
                this.fillTableDVCT();
                DialogHelper.alert(this, "Đã cập nhật thành công");
            } catch (Exception e) {
                DialogHelper.alert(this, "Cập nhật thất bại");
                System.out.println(e);
            }
        }
    }

    void fristDVCT() {
        this.rowdvct = 0;
        this.editDVCT();
    }

    void prevDVCT() {
        if (this.rowdvct > 0) {
            this.rowdvct--;
            this.editDVCT();
        }
    }

    void nextDVCT() {
        if (this.rowdvct < tblDichVu.getRowCount() - 1) {
            this.rowdvct++;
            this.editDVCT();
        }
    }

    void lastDVCT() {
        this.rowdvct = tblDichVu.getRowCount() - 1;
        this.editDVCT();
    }

    void setFormDVCT(DichVuCT dvct) {
        DichVu dv = dvdao.selectByID(dvct.getMaDV());
        BenhNhan bn = bndao.selectByID(dvct.getMaBN());
        cboTenDichVu.getModel().setSelectedItem(dv);
        cboTenBN.getModel().setSelectedItem(bn);
        txtNgayDangKi.setDate(dvct.getNgayDK());
        txtGhiChu.setText(dvct.getGhiChu());
    }

    DichVuCT getFormDVCT() {
        DichVuCT dvct = new DichVuCT();
        DichVu dv = (DichVu) cboTenDichVu.getSelectedItem();
        BenhNhan bn = (BenhNhan) cboTenBN.getSelectedItem();
        dvct.setMaDV(dv.getMaDV());
        dvct.setMaBN(bn.getMaBN());
        dvct.setNgayDK(txtNgayDangKi.getDate());
        dvct.setGhiChu(txtGhiChu.getText());
        return dvct;
    }

    void fillTableDVCT() {
        DefaultTableModel model = (DefaultTableModel) tblDichVuCT.getModel();
        model.setRowCount(0);

        BenhNhan bn = (BenhNhan) cboTenBN.getSelectedItem();
        DichVu dv = (DichVu) cboTenDichVu.getSelectedItem();

        List<DichVuCT> list = new ArrayList<>();
        if (bn.getMaBN() == -1 && dv.getMaDV() == -1) {
            list.clear();
            list = dvctdao.selectAll();
        } else if (bn.getMaBN() == -1) {
            list.clear();
            list = dvctdao.selectByMaDV(dv.getMaDV());
        } else if (dv.getMaDV() == -1) {
            list.clear();
            list = dvctdao.selectByMaBN(bn.getMaBN());
        } else {
            list.clear();
            list = dvctdao.selectByMaBNAndDV(bn.getMaBN(), dv.getMaDV());
        }
        if (ShareHelper.isLogin()) {
            try {
                for (DichVuCT dvct : list) {
                    if (dvct.getMaBN() >= 1) {
                        Object[] rowdvct = {
                            dvct.getMaDVCT(),
                            dvdao.selectByID(dvct.getMaDV()),
                            bndao.selectByID(dvct.getMaBN()),
                            DateHelper.toString(dvct.getNgayDK()),
                            dvct.getGhiChu()
                        };
                        model.addRow(rowdvct);
                    }
                }
                isLoad = true;
            } catch (Exception e) {
                DialogHelper.alert(this, "Lỗi truy vấn dữ liệu");
                System.out.println(e);
            }
        } else {
            List<DichVuCT> list1 = dvctdao.findlistByBN(ShareHelper.nguoidung.getMabn());
            try {
                for (DichVuCT dvct : list1) {
                    Object[] rowdvct = {
                        dvct.getMaDVCT(),
                        dvdao.selectByID(dvct.getMaDV()),
                        bndao.selectByID(ShareHelper.nguoidung.getMabn()),
                        DateHelper.toString(dvct.getNgayDK()),
                        dvct.getGhiChu()
                    };
                    model.addRow(rowdvct);
                }
                isLoad = true;
            } catch (Exception e) {
                DialogHelper.alert(this, "Lỗi truy vấn dữ liệu");
                System.out.println(e);
            }
        }

    }

    void editDVCT() {
        int maDVCT = (Integer) tblDichVuCT.getValueAt(this.rowdvct, 0);
        DichVuCT dvct = dvctdao.selectByID(maDVCT);
        this.setFormDVCT(dvct);
        this.updateStatusDVCT();
        isLoad = true;
    }

    void updateStatusDVCT() {
        boolean edit = (this.rowdvct >= 0);
        boolean frist = (this.rowdvct == 0);
        boolean last = (this.rowdvct == tblDichVu.getRowCount() - 1);
        btnThemDVCT.setEnabled(!edit);
        btnXoaDVCT.setEnabled(edit);
    }

    boolean validateDataDVCT() {
        BenhNhan bn = (BenhNhan) cboTenBN.getSelectedItem();
        DichVu dv = (DichVu) cboTenDichVu.getSelectedItem();

        if (dv.getMaDV() == -1) {
            DialogHelper.alert(this, "Bạn chưa chọn dịch vụ");
            return false;
        } else if (bn.getMaBN() == -1) {
            DialogHelper.alert(this, "Bạn chưa chọn bệnh nhân");
            return false;
        } else {
            return true;
        }
    }

    void fillComboxDichVu() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTenDichVu.getModel();
        model.removeAllElements();
        DichVu dichVu = new DichVu();
        dichVu.setTenDV("Tất cả");
        dichVu.setMaDV(-1);
        model.addElement(dichVu);
        List<DichVu> list = dvdao.selectAll();
        for (DichVu dv : list) {
            model.addElement(dv);
        }
    }

    void fillComboxBenhNhan() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTenBN.getModel();
        model.removeAllElements();
        BenhNhan benhNhan = new BenhNhan();
        benhNhan.setHoTen("Tất cả");
        benhNhan.setMaBN(-1);
        model.addElement(benhNhan);
        if (ShareHelper.isLogin()) {
            List<BenhNhan> list = bndao.selectAll();
            for (BenhNhan bn : list) {
                model.addElement(bn);
            }
        } else {
            List<BenhNhan> list = bndao.findlistById(ShareHelper.nguoidung.getMabn());
            for (BenhNhan bn : list) {
                model.addElement(bn);
            }
        }

    }

    void selectCbo() {
        if (isLoad) {
            this.fillTableDVCT();
        }
    }
}
